name: UI Testing with Playwright

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test_env:
        description: 'Test Environment'
        required: false
        default: 'development'
        type: choice
        options:
          - development
          - staging

env:
  NODE_VERSION: '18'
  BASE_URL: 'http://localhost:58002'

jobs:
  ui-tests:
    name: Run UI Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        include:
          - browser: chromium
            project: chromium
          - browser: firefox  
            project: firefox
          - browser: webkit
            project: webkit

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}

    - name: Setup Docker environment
      run: |
        # Make scripts executable
        chmod +x manage.sh run-k6-tests.sh
        
        # Create Docker network
        docker network create traefik-network || true
        
        # Start services
        echo "Starting Traefik and application services..."
        ./manage.sh start
        
        # Wait for services to be ready
        echo "Waiting for services to be ready..."
        timeout 300 bash -c 'until curl -f http://localhost:58002/ > /dev/null 2>&1; do sleep 2; done'
        
        # Show service status
        ./manage.sh status

    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.project }}
      env:
        CI: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: |
          playwright-report/
          test-results/
        retention-days: 7

    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: playwright-screenshots-${{ matrix.browser }}
        path: test-results/screenshots/
        retention-days: 3

    - name: Collect service logs on failure
      if: failure()
      run: |
        echo "Collecting service logs for debugging..."
        mkdir -p service-logs
        docker compose -f traefik-docker-compose.yml logs --no-color > service-logs/traefik.log 2>&1
        docker compose -f projects-docker-compose.yml logs --no-color > service-logs/projects.log 2>&1
        ./manage.sh status > service-logs/status.log 2>&1

    - name: Upload service logs
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: service-logs-${{ matrix.browser }}
        path: service-logs/
        retention-days: 3

    - name: Cleanup
      if: always()
      run: |
        echo "Cleaning up services..."
        ./manage.sh stop || true
        docker network rm traefik-network || true

  # Combined test report
  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: ui-tests
    if: always()

    steps:
    - name: Download all test artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: playwright-report-*
        merge-multiple: true
        path: combined-reports/

    - name: Generate combined HTML report
      run: |
        echo "<html><head><title>UI Test Results</title></head><body>" > combined-reports/index.html
        echo "<h1>UI Test Results - $(date)</h1>" >> combined-reports/index.html
        echo "<ul>" >> combined-reports/index.html
        
        for browser in chromium firefox webkit; do
          if [ -d "combined-reports/playwright-report-$browser" ]; then
            echo "<li><a href='playwright-report-$browser/index.html'>$browser Results</a></li>" >> combined-reports/index.html
          fi
        done
        
        echo "</ul></body></html>" >> combined-reports/index.html

    - name: Upload combined report
      uses: actions/upload-artifact@v4
      with:
        name: ui-test-report-combined
        path: combined-reports/
        retention-days: 14

  # Performance baseline check
  performance-check:
    name: Performance Baseline Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup services
      run: |
        chmod +x manage.sh run-k6-tests.sh
        docker network create traefik-network || true
        ./manage.sh start
        timeout 300 bash -c 'until curl -f http://localhost:58002/ > /dev/null 2>&1; do sleep 2; done'

    - name: Run performance baseline test
      run: |
        # Install k6
        curl -s https://github.com/grafana/k6/releases/download/v0.47.0/k6-v0.47.0-linux-amd64.tar.gz | tar xz
        sudo mv k6-v0.47.0-linux-amd64/k6 /usr/local/bin/
        
        # Run lightweight performance test
        k6 run --vus 5 --duration 30s tests/k6/root-endpoint-test.js

    - name: Cleanup performance test
      if: always()
      run: ./manage.sh stop || true